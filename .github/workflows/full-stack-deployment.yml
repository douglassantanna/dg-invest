name: Full Stack Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        type: environment
        required: true

jobs:
  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_PACKAGE_PATH: "api/api/api.csproj"
      SOLUTION: "api/dg-invest.api.sln"

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Build with dotnet
        run: dotnet build ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} --configuration Release

      - name: dotnet publish
        run: dotnet publish ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} -c Release -o ${{ env.DOTNET_ROOT }}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.DOTNET_ROOT }}/myapp

  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: build_backend
    environment:
      name: staging

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.14.0"

      # Install dependencies
      - name: Install dependencies
        working-directory: ./web-app
        run: npm install

      # Build the Angular app
      - name: Build Angular app
        working-directory: ./web-app
        run: |
          lower_env=$(echo "${{ github.event.inputs.environment }}" | tr '[:upper:]' '[:lower:]')
          npm run build --if-present -- --configuration=$lower_env

      # Upload Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: .web-app
          path: ./web-app/dist

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: build_frontend
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: Wait for Approval
        run: echo "Approval needed before deploying to production"
        id: approval
        if: ${{ github.event.inputs.approve == 'approved' }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          slot-name: "production"
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

  deploy_frontend:
    name: Deploy Frontend to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    needs: deploy_backend
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: .web-app

      - name: Deploy to Azure Static Web App (${{ github.event.inputs.environment }})
        if: steps.approval.conclusion == 'success'
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./web-app"
          api_location: ""
          output_location: "dist/web-app"
          deployment_environment: ${{ github.event.inputs.environment }}
